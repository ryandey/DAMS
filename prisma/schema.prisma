// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Account Generic
model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user user @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Session
model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Verification Token
model verificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// User (Admin)
model user {
  id            String          @id @default(cuid())
  roles         String          @default("user")
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  phone         String?
  company       String?
  address       String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  accounts      account[]
  sessions      session[]
  events        disasterEvent[]

  @@map("user")
}

model disasterEvent {
  id                   String           @id @default(cuid())
  userId               String
  profile              disasterProfile?
  location             String
  beginDate            DateTime
  endDate              DateTime?
  contactCenterName    String?
  contactCenterPhone   String?
  contactCenterAddress String?
  // TODO: Add categories of natural disasters
  // TODO: Add array of required items/help/assistance (and create its own object)
  expired              Boolean          @default(false)
  createdBy            user             @relation(fields: [userId], references: [id])
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
}

model disasterProfile {
  id         String        @id @default(cuid())
  title      String?
  published  Boolean       @default(false)
  slug       String?
  content    String?
  disaster   disasterEvent @relation(fields: [disasterId], references: [id])
  disasterId String        @unique
}
